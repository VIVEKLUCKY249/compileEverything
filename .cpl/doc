
wget https://github.com/VonC/compileEverything/tarball/master
tar xpvf master
mv Von* ce1
cd ce1
./make_env.sh -title="test"
tail --follow=name --retry .lastlog or tail -F .lastlog
except on Ubuntu (http://superuser.com/questions/392072/make-tail-wait-for-a-file-to-exist)
while ! tail -f bar/somefile.log ; do sleep 1 ; done
:1,$s$/home/auser/compileEverything$@H@$g (vi, vim, replace subst on all file)
~~~~~~~~~~~
    1  gsettings set org.gnome.desktop.wm.preferences button-layout ':minimize,maximize,close'
    3  sudo apt-get install git
    4  git --version
    5  mkdir gitpoc
    6  chmod 700 gitpoc/
    7  cd gitpoc/
    8  wget https://github.com/VonC/compileEverything/tarball/master
    9  mkdir v1
   10  chmod 700 v1
   12  tar xvf master -C v1 --strip-components 1
   cd v1
   git clone --bare https://VonC@github.com/VonC/compileEverything .git
   git config --local --bool core.bare false
   git reset HEAD -- .
   git config --local remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
   git fetch origin
   git branch -u origin/master master
~~~~~~~~~~~
port:
lsof -i :port
~~~~~~~~~~~~~~
userapp@vonc-VirtualBox:~$ ifconfig|grep inet|grep -v '::'|grep -v ':10'|grep -v ':127'
          inet addr:192.168.xxx.zzz  Bcast:192.168.xxx.255  Mask:255.255.255.0
~~~~~~~~~~~~~~
last changed 5 minutes or more:
userapp@vonc-VirtualBox:~$ find . -mmin -60 -print
~~~~~~~~~~~~~~
echo on stderr, in red: echo  -e "\e[1;31mMY ERROR MESSAGE\e[0m" 1>&2
~~~~~~~~~~~~~~
Find in files: grep -nHIrF string *

-n, --line-number
              Prefix each line of output with the 1-based line number within its input file.  (-n is specified by POSIX.)
-H, --with-filename
              Print the file name for each match.  This is the default when there is more than one file to search.
-I     Process a binary file as if it did not contain matching data; this is equivalent to the --binary-files=without-match option.
-r, -R, --recursive
              Read all files under each directory, recursively; this is equivalent to the -d recurse option.
-F, --fixed-strings
              Interpret PATTERN as a list of fixed strings, separated by newlines, any of which is to be matched.  (-F is specified by POSIX.)

~~~~~~~~~~~~~~
ssh   SSH connections (like telnet:) and  IETF Draft  ssh://[<user>[;fingerprint=<host-key fingerprint>]@]<host>[:<port>]

foo://username:password@example.com:8042/over/there/index.dtb?type=animal&name=narwhal#nose
  \_/ \_______________/ \_________/ \__/            \___/ \_/ \______________________/ \__/
   |         |               |       |                |    |            |                |
   |     userinfo         hostname  port              |    |          query          fragment
   |  \________________________________/\_____________|____|/
   |                  |                          |    |    |
scheme name       authority                    path   |    |
   |                                                  |    |
   |            path                       interpretable as filename
   |   ___________|____________                            |
  / \ /                        \                           |
  urn:example:animal:ferret:nose             interpretable as extension

~~~~~~~~~~~~~~
ssh with pam:

debug1: Next authentication method: password
userapp@192.168.xxx.zzz's password:
debug3: packet_send2: adding 64 (len 59 padlen 5 extra_pad 64)
debug2: we sent a password packet, wait for reply
debug1: Authentications that can continue: publickey,password,keyboard-interactive
Permission denied, please try again.

Sep 11 10:17:01 vonc-VirtualBox CRON[3024]: pam_unix(cron:session): session opened for user root by (uid=0)
Sep 11 10:17:01 vonc-VirtualBox CRON[3024]: pam_unix(cron:session): session closed for user root
Sep 11 11:17:01 vonc-VirtualBox CRON[3073]: pam_unix(cron:session): session opened for user root by (uid=0)
Sep 11 11:17:01 vonc-VirtualBox CRON[3073]: pam_unix(cron:session): session closed for user root
Sep 11 12:17:01 vonc-VirtualBox CRON[3127]: pam_unix(cron:session): session opened for user root by (uid=0)
Sep 11 12:17:01 vonc-VirtualBox CRON[3127]: pam_unix(cron:session): session closed for user root
Sep 11 12:55:30 vonc-VirtualBox sshd[3221]: error: Could not get shadow information for userapp
Sep 11 12:55:30 vonc-VirtualBox sshd[3221]: Failed password for userapp from 192.168.xxx.yyy port 57166 ssh2

PAM not suported: PAM headers not found during configure of openssh => no --with-pam => no "UsePAM"
~~~~~~~~~~~~~~
chmod 600 authorized_keys
~~~~~~~~~~~~~~
redirection tcsh for find:
tcsh$( s find . -name "libXtst*" > /dev/tty ) > & /dev/null

For bash: http://tldp.org/LDP/abs/html/io-redirection.html
&>filename
      # Redirect both stdout and stderr to file "filename."
      # This operator is now functional, as of Bash 4, final release.
auser@vonc-VirtualBox:~/compileEverything$ bash -x ./make_env.sh &> t
~~~~~~~~~~~~~~
Sep 11 16:11:45 vonc-VirtualBox sshd[13412]: Invalid user ausername from 192.168.xxx.yyy
Sep 11 16:11:45 vonc-VirtualBox sshd[13412]: input_userauth_request: invalid user ausername
Sep 11 16:11:45 vonc-VirtualBox sshd[13412]: Failed none for invalid user ausername from 192.168.xxx.yyy port 59596 ssh2
Sep 11 16:11:45 vonc-VirtualBox sshd[13412]: Failed publickey for invalid user ausername from 192.168.xxx.yyy port 59596 ssh2
Sep 11 16:11:45 vonc-VirtualBox sshd[13412]: Failed keyboard-interactive for invalid user ausername from 192.168.xxx.yyy port 59596 ssh2

debug3: key_read: missing whitespace
debug2: key_type_from_name: unknown key type '-----END'
debug3: key_read: missing keytype
key_read: uudecode AAAAB3NzaC1yc2EAAAADAQABAAABAQDREEhRsePmCxHm2j5FKolAZeJYMfUAOEGjh+ML0XEwVwuotTovlyrsMqjH3qNLS0/11CKBlNoeJ5jbI8ANk0
 failed
debug3: key_read: missing whitespace
debug3: key_read: missing whitespace
The local user public key was copied on several lines instead of one (result of a copy/paste) => put it on one line
~~~~~~~~~~~~~~
Debug bash script with line number:
#!/bin/bash -x
me=`basename $0`
export 'PS4=+ $me.$LINENO '
function testfunction() {
  echo $*
}
testfunction testing
testfunction 123
~~~~~~~~~~~~~~
VirtualBox settings:
Install first Oracle VM VirtualBox Extension Pack
General > Advanced > Mini Toolbar: Show at Top Of Screen
System > Motherboard > Boot order: Hard-disk, then CD/DVD-ROM (no Floppy, not network)
                     > Extended Features: select 'Enable OP APIC' and 'Hardware clock in UTC time'. Deselect 'Enable absolute pointing device'
  > Processor   > 2 CPU, Enable PAE/NX
Display > Video > 128 MB, Enable 3D Acceleration
Storage Tree, Add VBoxGuestAdditions.ido to IDE Controller (C:\Program Files\Oracle\VirtualBox\VBoxGuestAdditions.iso) as Secondary Master, add ubuntu-11.04-destop-i86.iso for installation as Primary Master
Network > Adapter 2 > Enable Network Adapter, Attached to: Bridged Adapter, Name: a wireless one, Advanced: Promiscuous Mode: Deny
USB > Enable USB 2.0 (EHCI) Controller (only if Extension Pack is installed)
~~~~~~~~~~~~~~
Get project without git:
wget https://github.com/VonC/compileEverything/tarball/master
tar xpvf master
cd VonC-compileEverything-ae3e9a0/
~~~~~~~~~~~~~~
bash substrings: http://tldp.org/LDP/LGNET/18/bash.html
${variable%pattern}
    Trim the shortest match from the end 
${variable##pattern}
    Trim the longest match from the beginning 
${variable%%pattern}
    Trim the longest match from the end 
${variable#pattern}
    Trim the shortest match from the beginning 
    
    Given:
        foo=/tmp/my.dir/filename.tar.gz 

    We can use these expressions:

    path = ${foo%/*}
        To get: /tmp/my.dir (like dirname)
    file = ${foo##*/}
        To get: filename.tar.gz (like basename)
    base = ${file%%.*}
        To get: filename 
    ext = ${file#*.}
        To get: tar.gz 
        
~~~~~~~~~~~~~~~~~~
Apache: 
httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1 for ServerName

http://ubuntunewb.blogspot.com/2011/04/apache2-could-not-reliably-determine.html
http://jensontaylor.blogspot.com/2010/09/manual-apache-httpd-22-installation-on.html
To solve this error follow these instructions:

Open up httpd.conf:
nano /etc/apache2/httpd.conf
Add this line to the file:
ServerName localhost

Restart apache2:
service apache2 restart
~~~~~~~~~~~~~~
Apache
auser@vonc-VirtualBox:~/compileEverything/apache$ ./ctl -k start
(13)Permission denied: make_sock: could not bind to address 0.0.0.0:80
no listening sockets available, shutting down
Unable to open logs
=> Comment Listen 80
~~~~~~~~~~~~
auser@vonc-VirtualBox:~/compileEverything/apache$ ./ctl status

Looking up localhost
Making HTTP connection to localhost
Alert!: Unable to connect to remote host.

lynx: Can't access startfile http://localhost/server-status

http://ubuntuforums.org/showthread.php?t=1435840

<IfModule mod_status.c>
#
# Allow server status reports generated by mod_status,
# with the URL of http://servername/server-status
# Uncomment and change the ".example.com" to allow
# access from other hosts.
#
ExtendedStatus On
<Location /server-status>
    SetHandler server-status
    Order deny,allow
    Deny from all
    Allow from localhost ip6-localhost <my ip address>
#    Allow from .example.com
</Location>

</IfModule>
auser@vonc-VirtualBox:~/compileEverything/apache$ lynx vonc-VirtualBox:8080/server-status
~~~~~~~~~~~~~~
bash colors
https://wiki.archlinux.org/index.php/Color_Bash_Prompt
http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
~~~~~~~~~~~~~~
bash nounset
http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_03_06.html
set +o nounset # desactive
set -o nounset # desactive
~~~~~~~~~~~~~~
auser@vonc-VirtualBox:~/compileEverything$ usr/local/sbin/sshd 
sshd re-exec requires execution with an absolute path
auser@vonc-VirtualBox:~/compileEverything$ which sshd
/home/auser/compileEverything/usr/local/sbin/sshd
auser@vonc-VirtualBox:~/compileEverything$ /home/auser/compileEverything/usr/local/sbin/sshd
Privilege separation user sshd does not exist
=> UsePrivilegeSeparation no
----
auser@vonc-VirtualBox:~/compileEverything$ ssh localhost:2200
ssh: Could not resolve hostname localhost:2200: Name or service not known
auser@vonc-VirtualBox:~/compileEverything$ man ssh
auser@vonc-VirtualBox:~/compileEverything$ ssh -p 2200 localhost
=> ok but ask for password
~~~~~~~~~~
ssh-keygen -t rsa -f .ssh/gitoliteadm -C "Gitolite Admin with interactive access" -q -P ""
no passphrase
mkdir .ssh
$ chmod 700 .ssh
$ cd .ssh
$ touch authorized_keys
$ chmod 600 authorized_keys
$ cat ../identity.pub >> authorized_keys
-----
sh example: http://www.styma.org/SunAtHome/sample_files/sshd.html
do_rsa_keygen()
{
   if [ ! -s $RsaKey ]
   then
	echo "Generating SSH2 RSA host key... \c"
	if $KeyGen -q -t rsa -f $RsaKey -C '' -N '' > /dev/null 2>&1
	then
	   /bin/chmod 600 $RsaKey
	   /bin/chmod 644 $RsaKey.pub
	   echo "done\n"
	else
	   echo "FAILED\n"
	   exit 1
	fi
   fi
} # function do_rsa_keygen
~~~~~~~~~
#PidFile /home/auser/compileEverything/usr/local/var/run/sshd.pid
=> make sure #PidFile /home/auser/compileEverything/usr/local/var/run/ exists!
~~~~~~~~~~
ssh -F config gitolitesrv echo $PATH
with config file
Host gitolitesrv
Hostname localhost
User auser
Port 2200
IdentityFile /home/auser/compileEverything/.ssh/gitoliteadm
~~~~~~~~~~~
ssh -F config gitolitesrv echo $PATH
auser@vonc-VirtualBox:~/compileEverything$ ssh -F .ssh/config gitolitesrv compileEverything/usr/local/apps/git/bin/git --version
git version 1.7.6.1
~~~~~~~~
cd .cpl
git clone https://github.com/sitaramc/gitolite
cd gitolite/
auser@vonc-VirtualBox:~/compileEverything/.cpl/gitolite$ 
src/gl-system-install /home/auser/compileEverything/gitolite/bin /home/auser/compileEverything/gitolite/conf /home/auser/compileEverything/gitolite/hooks
auser@vonc-VirtualBox:~/compileEverything/.cpl/gitolite$ l ../../gitolite/
~~~~~~~~~~~~~~
cd /home/ausername/compileEverything/usr/local
$ kill -TERM $(cat ./libs/openldap-2.4.24/var/run/slapd.pid)
$ ./libexec/slapd.exe -f etc/openldap/slapd.conf
$ ./bin/ldapsearch.exe -s base -b cn=monitor 'objectclass=*'
SASL/OTP authentication started
ldap_sasl_interactive_bind_s: Invalid credentials (49)
        additional info: SASL(-13): user not found: no OTP secret in database
http://www.openldap.org/lists/openldap-software/200309/msg00048.html
Well slapd uses SASL auth mechanisms per default unless told not to do so (providing the -x switch to ldap(add,modify,delete,passwd). Apparently OTP is your default SASL mech but you're lacking the secrets.

$ ./bin/ldapsearch.exe -x -s base -b cn=Manager 'objectclass=*'
# extended LDIF
#
# LDAPv3
# base <cn=Manager> with scope baseObject
# filter: objectclass=*
# requesting: ALL
#

# search result
search: 2
result: 32 No such object

# numResponses: 1
---
$ ./bin/ldapsearch.exe -x -d5

~~~~~~~~~~~~~~~
auser@vonc-VirtualBox:~/compileEverything$ ldapsearch -P 3 -x  -LLL -b "" -s base -h localhost -p 9011 '@extensibleObject' 
dn:
objectClass: top
objectClass: OpenLDAProotDSE
structuralObjectClass: OpenLDAProotDSE
configContext: cn=config
namingContexts: dc=example,dc=com
monitorContext: cn=Monitor
supportedControl: 1.3.6.1.4.1.4203.1.9.1.1
supportedControl: 2.16.840.1.113730.3.4.18
supportedControl: 2.16.840.1.113730.3.4.2
supportedControl: 1.3.6.1.4.1.4203.1.10.1
supportedControl: 1.2.840.113556.1.4.319
supportedControl: 1.2.826.0.1.3344810.2.3
supportedControl: 1.3.6.1.1.13.2
supportedControl: 1.3.6.1.1.13.1
supportedControl: 1.3.6.1.1.12
supportedExtension: 1.3.6.1.4.1.4203.1.11.1
supportedExtension: 1.3.6.1.4.1.4203.1.11.3
supportedExtension: 1.3.6.1.1.8
supportedFeatures: 1.3.6.1.1.14
supportedFeatures: 1.3.6.1.4.1.4203.1.5.1
supportedFeatures: 1.3.6.1.4.1.4203.1.5.2
supportedFeatures: 1.3.6.1.4.1.4203.1.5.3
supportedFeatures: 1.3.6.1.4.1.4203.1.5.4
supportedFeatures: 1.3.6.1.4.1.4203.1.5.5
supportedLDAPVersion: 3
supportedSASLMechanisms: CRAM-MD5
supportedSASLMechanisms: OTP
entryDN:
subschemaSubentry: cn=Subschema
~~~~~~~~~~~~
Create the db files within the (at least empty) db.1.a directory:
auser@vonc-VirtualBox:~/compileEverything/openldap$ ldapmodify -a -P 3 -x -D "cn=Manager,dc=example,dc=com" -h localhost -p 9011 -w secret < test-ordered.ldif 
adding new entry "dc=example,dc=com"
See also http://www.openldap.org/doc/admin22/dbtools.html: ldapadd -f test-ordered.ldif -x -D "cn=Manager,dc=example,dc=com" -w secret
~~~~~~~~~~~~~
auser@vonc-VirtualBox:~/compileEverything/openldap$ ldapsearch -P 3 -x -LLL -S "" -b "dc=example,dc=com" -h localhost -p 9011 'objectclass=*'
dn: cn=All Staff,ou=Groups,dc=example,dc=com
member: cn=Manager,dc=example,dc=com
member: cn=Barbara Jensen,ou=Information Technology Division,ou=People,dc=example,dc=com
member: cn=Jane Doe,ou=Alumni Association,ou=People,dc=example,dc=com
member: cn=John Doe,ou=Information Technology Division,ou=People,dc=example,dc=com
member: cn=Mark Elliot,ou=Alumni Association,ou=People,dc=example,dc=com
~~~~~~~~~~~
http://slacksite.com/apache/certificate.php

auser@vonc-VirtualBox:~/compileEverything/apache$ openssl genrsa -des3 -out itsvcprdgit.world.company.passphrase.key 1024
Generating RSA private key, 1024 bit long modulus
....................++++++
....................................++++++
e is 65537 (0x10001)
Enter pass phrase for itsvcprdgit.world.company.passphrase.key:
Verifying - Enter pass phrase for itsvcprdgit.world.company.passphrase.key:

Remove passphrase:
auser@vonc-VirtualBox:~/compileEverything/apache$ openssl rsa -in itsvcprdgit.world.company.passphrase.key -out itsvcprdgit.world.company.key 
Enter pass phrase for itsvcprdgit.world.company.passphrase.key:
writing RSA key
~~~~~~~~~~~
cat /etc/hosts
127.0.0.1       itsvcprdgit.world.company itsvcprdgit
127.0.0.1       itsvc.world.company itsvc

auser@vonc-VirtualBox:~/compileEverything/apache$ ping itsvcprdgit
PING itsvcprdgit.world.company (127.0.0.1) 56(84) bytes of data.
64 bytes from localhost (127.0.0.1): icmp_req=1 ttl=64 time=0.055 ms

~~~~~~~~~~~
auser@vonc-VirtualBox:~/compileEverything/apache$ openssl req -new -key itsvcprdgit.world.company.key -out itsvcprdgit.world.company.csr
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:FR
State or Province Name (full name) [Some-State]:France
Locality Name (eg, city) []:FR
Organization Name (eg, company) [Internet Widgits Pty Ltd]:company
Organizational Unit Name (eg, section) []:.
Common Name (eg, YOUR name) []:itsvcprdgit.world.company
Email Address []:itsvcprdgit@world.company

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
~~~~~~~~~~~~~
openssl x509 -req -days 600 -in itsvcprdgit.world.company.csr -signkey itsvcprdgit.world.company.key -out itsvcprdgit.world.company.crt
Signature ok
subject=/C=FR/ST=France/L=FR/O=company/CN=itsvcprdgit.world.company/emailAddress=itsvcprdgit@world.company
Getting Private key
~~~~~~~~~~~~~
https://itsvcprdgit:8443/git/
Sun Oct 23 02:33:54 2011] [info] Initial (No.1) HTTPS request received for child 0 (server itsvcprdgit.world.company:443)
[Sun Oct 23 02:33:54 2011] [debug] mod_authnz_ldap.c(403): [client 127.0.0.1] [20443] auth_ldap authenticate: using URL ldap://localhost:9011/DC=example,DC=com?cn?sub?(objectClass=person)
[Sun Oct 23 02:33:54 2011] [info] [client 127.0.0.1] [20443] auth_ldap authenticate: user Manager authentication failed; URI /git/ [LDAP: ldap_simple_bind_s() failed][Invalid DN syntax]
format logs apache: http://www.webhostgear.com/69.html

ldap_bv2dn(Manager)=-4 Decoding error
conn=1001 op=0 do_bind: invalid dn (Manager)
~~~~~~~~~~~
auser@vonc-VirtualBox:~$ cd gitolite/
auser@vonc-VirtualBox:~/gitolite$ git clone gitolitesrv:gitolite-admin
[ VonC,vonc@laposte.net for github.com ]
Enter your Windows password: (no password entered) Cloning into gitolite-admin...
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 6 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (6/6), done.
~~~~~~~~~~~~~~
Using ldapsearch to read all the entries
ldapsearch -P 3 -x  -LLL -S "" -b "dc=example,dc=com" -h localhost -p 9011 'objectclass=*'

Searching for an entry, or just an attribute:
auser@vonc-VirtualBox:~/.ssh$ ldapsearch -P 3 -x  -LLL -S "" -b "dc=example,dc=com" -h localhost -p 9011 'uid=bjensen'
dn: cn=Barbara Jensen,ou=Information Technology Division,ou=People,dc=example,
 dc=com
objectClass: OpenLDAPperson
cn: Barbara Jensen
cn: Babs Jensen
sn:: IEplbnNlbiA=
uid: bjensen
title: Mythical Manager, Research Systems
postalAddress: ITD Prod Dev & Deployment $ 535 W. William St. Room 4212 $ Anyt
 own, MI 48103-4943
seeAlso: cn=All Staff,ou=Groups,dc=example,dc=com
userPassword:: YmplbnNlbg==
mail: bjensen@mailgw.example.com
homePostalAddress: 123 Wesley $ Anytown, MI 48103
description: Mythical manager of the rsdd unix project
drink: water
homePhone: +1 313 555 2333
pager: +1 313 555 3233
facsimileTelephoneNumber: +1 313 555 2274
telephoneNumber: +1 313 555 9022

auser@vonc-VirtualBox:~/.ssh$ ldapsearch -P 3 -x  -LLL -S "" -b "dc=example,dc=com" -h localhost -p 9011 'uid=bjensen' uid
dn: cn=Barbara Jensen,ou=Information Technology Division,ou=People,dc=example,
 dc=com
uid: bjensen

auser@vonc-VirtualBox:~/.ssh$ ldapsearch -P 3 -x  -LLL -s "sub" -b "dc=example,dc=com" -h localhost -p 9011 'objectclass=person' uid
dn: cn=Barbara Jensen,ou=Information Technology Division,ou=People,dc=example,
 dc=com
uid: bjensen

dn: cn=Bjorn Jensen,ou=Information Technology Division,ou=People,dc=example,dc
 =com
uid: bjorn


Components of an LDAP URL
ldap[s]://hostname:port/base_dn?attributes?scope?filter
ldap://localhost:9011/dc=example,dc=com?uid?sub?(objectClass=*)
http://www.centos.org/docs/5/html/CDS/ag/8.0/LDAP_URLs-Components_of_an_LDAP_URL.html

Monitoring your LDAP
http://tille.garrels.be/training/ldap/ch05s02.html

Add an entry
http://www.ldapsource.com/content/ldap_utility.html
auser@vonc-VirtualBox:~/openldap$ ldapmodify -a -P 3 -x -D "cn=manager,dc=example,dc=com" -h localhost -p 9011 -w secret < gitoliteadm.ldif 
adding new entry "cn=Gitolite Admin,ou=People,dc=example,dc=com"
~~~~~~~~~~~~~
alias agitBjensenItsvcprdgit='alias git="${H}/sbin/wgit u bjensen,bjensen@example.com,itsvcprdgit.world.company,bjensen"'
alias git='/home/auser/compileEverything/sbin/wgit u bjensen,bjensen@example.com,itsvcprdgit.world.company,bjensen'
rm -Rf demo/
auser@vonc-VirtualBox:~/gitolite$ !git
git clone https://itsvcprdgit.world.company:8453/hgit/demo
[ bjensen,bjensen@example.com for itsvcprdgit.world.company ]
Cloning into demo...
warning: You appear to have cloned an empty repository.
auser@vonc-VirtualBox:~/gitolite$ 
~~~~~~~~~~~
list only files, not subdirectories (not recursively ls)
ls -d xxx
~~~~~~~~~~~
Run server on lower port (<1024): http://serverfault.com/questions/112795/how-can-i-run-a-server-on-linux-on-port-80-as-a-normal-user
http://stackoverflow.com/questions/413807/is-there-a-way-for-non-root-processes-to-bind-to-privileged-ports-1024-on-l
setcap 'cap_net_bind_service=+ep' /path/to/program
~~~~~~~~~~~~~
auser@vonc-VirtualBox:~/nginx$ ./nginx -h
nginx: nginx version: nginx/1.0.8
nginx: Usage: nginx [-?hvVtq] [-s signal] [-c filename] [-p prefix] [-g directives]

Options:
  -?,-h         : this help
  -v            : show version and exit
  -V            : show version and configure options then exit
  -t            : test configuration and exit
  -q            : suppress non-error messages during configuration testing
  -s signal     : send signal to a master process: stop, quit, reopen, reload
  -p prefix     : set prefix path (default: /home/auser/compileEverything/usr/local/apps/nginx-1.0.8/)
  -c filename   : set configuration file (default: conf/nginx.conf)
  -g directives : set global directives out of configuration file

auser@vonc-VirtualBox:~/nginx$ ./nginx -V
nginx: nginx version: nginx/1.0.8
nginx: TLS SNI support enabled
nginx: configure arguments: --prefix=/home/auser/compileEverything/usr/local/apps/nginx-1.0.8 --user=auser --group=auser --with-rtsig_module --with-select_module --with-poll_module --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_stub_status_module --with-http_perl_module --with-debug --with-mail --with-mail_ssl_module --with-perl=/home/auser/compileEverything/usr/local/apps/perl/bin/perl --with-ld-opt='-L/home/auser/compileEverything/usr/local/lib -L/home/auser/compileEverything/usr/local/ssl/lib -R/home/auser/compileEverything/usr/local/lib -R/home/auser/compileEverything/usr/local/ssl/lib' --with-cc-opt='-I/home/auser/compileEverything/usr/local/include -I/home/auser/compileEverything/usr/local/ssl/include'

auser@vonc-VirtualBox:~/nginx$ ./nginx -v
nginx: nginx version: nginx/1.0.8

auser@vonc-VirtualBox:~/nginx$ ./nginx -t
nginx: the configuration file /home/auser/compileEverything/usr/local/apps/nginx-1.0.8/conf/nginx.conf syntax is ok
nginx: [emerg] bind() to 0.0.0.0:80 failed (13: Permission denied)
nginx: configuration file /home/auser/compileEverything/usr/local/apps/nginx-1.0.8/conf/nginx.conf test failed

auser@vonc-VirtualBox:~/nginx$ ./nginx -tq
nginx: [emerg] bind() to 0.0.0.0:80 failed (13: Permission denied)
nginx: configuration file /home/auser/compileEverything/usr/local/apps/nginx-1.0.8/conf/nginx.conf test failed

~~~~~~~~~~~~~~~~~~
http://www.kernel.org/doc/man-pages/online/pages/man7/capabilities.7.html
       CAP_NET_BIND_SERVICE
              Bind a socket to Internet domain privileged ports (port numbers less than 1024).
auser@vonc-VirtualBox:~/nginx$ sudo /sbin/setcap 'cap_net_bind_service=+ep' /home/auser/compileEverything/usr/local/apps/nginx/sbin/nginx 
auser@vonc-VirtualBox:~/nginx$ ./nginx -t
nginx: the configuration file /home/auser/compileEverything/usr/local/apps/nginx-1.0.8/conf/nginx.conf syntax is ok
nginx: configuration file /home/auser/compileEverything/usr/local/apps/nginx-1.0.8/conf/nginx.conf test is successful
~~~~~~~~~~~~
auser@vonc-VirtualBox:~/nginx$ ./nginx
auser@vonc-VirtualBox:~/nginx$ cd ..
auser@vonc-VirtualBox:~$ find . -mmin -2
./.cpl
./.cpl/doc
./usr/local/apps/nginx-1.0.8/logs/nginx.pid
~~~~~~~~~~~~
Equivalent of Gitolite for Mercurial, From Kev (Kevin Kenny) http://stackoverflow.com/users/419/kev
http://blog.zygonia.net/2011/10/26/mercurial-and-mercurial-server-on-centos/
Mercurial and mercurial-server on CentOS
mercurial-server 1.2 sources
http://dev.lshift.net/paul/mercurial-server/mercurial-server
How mercurial-server works: http://dev.lshift.net/paul/mercurial-server/docbook.html#id3887137
~~~~~~~~~~~~~~~~
For certificates, don't forget to add an alternate name
auser@vonc-VirtualBox:/home/auser/Documents/gitolite/conf$ diff -w ./itsvcgit/ssl/openssl.cnf ./itsvcsvn10/ssl/openssl.cnf
88d87
< req_extensions = v3_req # The extensions to add to a certificate request
173,180d171
< 
< [ v3_req ]
< 
< # Extensions to add to a certificate request
< 
< basicConstraints = CA:FALSE
< keyUsage = nonRepudiation, digitalSignature, keyEncipherment
< subjectAltName = DNS:itsvcgit.fr.world.socgen,DNS:itsvcgit
~~~~~~~~~~~~~~~
cd nginx/
openssl genrsa -des3 -out itsvc.world.company.passphrase.key 1024
openssl rsa -in itsvc.world.company.passphrase.key -out itsvc.world.company.key

bad:
openssl req -new -config openssl.cnf -extensions v3_req -key itsvc.world.company.key -out itsvc.world.company.csr
openssl x509 -req -days 600 -in itsvc.world.company.csr -signkey itsvc.world.company.key -out itsvc.world.company.crt

good:
auser@vonc-VirtualBox:~/nginx$ openssl req -new -config openssl.cnf -extensions v3_req -x509 -days 730 -key itsvc.world.company.key -out itsvc.world.company.crt
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [FR]:
State or Province Name (full name) [France]:
Locality Name (eg, city) [Paris]:
Organization Name (eg, company) [company]:
Organizational Unit Name (eg, section) [.]:.
Common Name (eg, YOUR name) [itsvc.world.company]:
Email Address [itsvc@world.company]:


Display the contents of a certificate:
auser@vonc-VirtualBox:~/nginx$ openssl x509 -noout -text -in itsvc.world.company.crt

auser@vonc-VirtualBox:~$ git clone https://itsvc/hgit/demo
[ bjensen,bjensen@example.com for itsvcprdgit.world.company ]
Cloning into demo...
error: SSL certificate problem, verify that the CA cert is OK. Details:
error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed while accessing https://itsvc/hgit/demo/info/refs

cat itsvc.world.company.crt >> $SSL_CERT_FILE doesn't seem to do any good.

OK: auser@vonc-VirtualBox:~$ cat nginx/itsvc.world.company.crt >> .ssh/curl-ca-bundle.crt 
=> clone ok

with openssl:
auser@vonc-VirtualBox:~/nginx$ diff -w openssl.cnf ../.cpl/openssl.cnf.ori 
88d87
< req_extensions = v3_req # The extensions to add to a certificate request
92c91
< countryName_default		= FR
---
> countryName_default		= 
97c96
< stateOrProvinceName_default	= France
---
> stateOrProvinceName_default	= 
100d98
< localityName_default = Paris
103c101
< 0.organizationName_default	= company
---
> 0.organizationName_default	= Webmin
110c108
< organizationalUnitName_default	= .
---
> #organizationalUnitName_default	=
114d111
< commonName_default = itsvc.world.company
118d114
< emailAddress_default = itsvc@world.company
176,183d171
< 
< [ v3_req ]
< 
< # Extensions to add to a certificate request
< 
< basicConstraints = CA:FALSE
< keyUsage = nonRepudiation, digitalSignature, keyEncipherment
< subjectAltName = DNS:itsvc.world.company,DNS:itsvc



~~~~~~~~~~~~~
http://www.amwsites.com/blog/2011/03/get-rid-of-funky-escape-characters-from-git-diff/
s your git diff output fill of escape characters? Do you want it to display colourful messages instead?
This is what it used to look like on my screen when I ran git diff. Notice the funky characters such as ESC[.
# git diff
ESC[1mdiff --git a/myfile.php b/myfile.phpESC[m
ESC[1mindex 20169dd..c0beb0e 100644ESC[m
ESC[1m--- a/myfile.phpESC[m
ESC[1m+++ b/myfile.phpESC[m
ESC[36m@@ -1,4 +1,5 @@ESC[m
<?phpESC[m
ESC[32m+ESC[mESC[32m/* Added a comment */ESC[m
ESC[m
function myfunction()ESC[m
{ESC[m
It turns out that depending on how your environment is setup, the default pager that is being used to view git diff output may be .more. and a simple switch to .less. makes it more colour-friendly.
To make less your pager when going a git diff, run the following:
# git config --add core.pager less
Now, the next time you run git diff, you should get coloured output.
---
On RedHat Linux, I actually had to set pager to more, not less!
~~~~~~~~~~~~~~~
Get the certificate of an LDAP server:
openssl s_client -connect ldap.co.xx:3269  2>&1 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
~~~~~~~~~~~~
Check what files are accessed by a process
http://blog.plenz.com/2011-01/which-files-are-accessed.html
ahostname /home/auser/openldap #strace -efile ldapsearch -d 1 -x -H ldaps://company.co.xx:3269 -D 'CN=bindingUser,OU=Accounts,DC=Full,DC=Context,DC=Company' -w password -b 'OU=Accounts,DC=Full,DC=Context,DC=Company' -ZZ  2>&1 1>/dev/null | grep ^open | cut -d\" -f2 | grep ldap
/home/auser/usr/local/libs/openldap-2.4.26/etc/openldap/ldap.conf
/home/auser/ldaprc
/home/auser/.ldaprc
ldaprc
~~~~~~~~~~~~~~~~~~~
man doesn't work, but
auser:15 ahostname /home/auser #/usr/bin/zsoelim usr/local/share/man/man1/groffer.1  | /usr/bin/tbl | /usr/bin/groff -mandoc -Tutf8
debug man: man --debug -a -S1:5 locale 2>&1
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=158752
ERROR: /usr/bin/zsoelim /usr/share/man/man5/locale.5 | /usr/bin/tbl | /usr/bin/nroff -mandocdb -rLL=167n -rLT=167n -Tutf8 | less 
iconv: conversion from utf8 unsupported
iconv: try 'iconv -l' to get the list of supported encodings

troff: fatal error: can't find macro file andocdb

auser:21 ahostname /home/auser #mandb -u
0 man subdirectories contained newer manual pages.
0 manual pages were added.
0 stray cats were added.
0 old database entries were purged.
~~~~~~~~~~~~~~
git status without states:
auser:08 ahostname /home/auser #git status -s | grep '?' | cut -b 4-
.manpath
gitolite/check_commits.sh
gitolite_rc.pm

Only "untracked":
auser:23 ahostname /home/auser #git status -s | cut -b 4-
[34;47mVonC,vonc@laposte.net for github.com ]
.cpl/.bashrc.tpl
cgit/cgit.pl.tpl
gitolite/install_or_update_gitolite.sh
gitweb/gitweb.conf.pl.tpl
.manpath
gitolite/check_commits.sh
gitolite_rc.pm
~~~~~~~~~~~~~~~~~~
http://www.herongyang.com/Cryptography/Certificate-Format-keytool-Import-in-DER-and-PEM.html
keytool -importcert -noprompt -file "${H}/apache/crt" -keystore "${H}/tomcat/keystore.ssl" -storepass tomcatpass -alias openssl_crt_pem
keytool -importcert -trustcacerts -noprompt -file "${H}/apache/crt" -keystore "${H}/tomcat/keystore.ssl" -storepass tomcatpass -alias openssl_crt_pem
Certificate was added to keystore

keytool -list -keystore "${H}/tomcat/keystore.ssl" -storepass tomcatpass


Keystore type: JKS
Keystore provider: SUN

Your keystore contains 1 entry

openssl_crt_pem, 10-Apr-2012, trustedCertEntry,
Certificate fingerprint (MD5): 04:39:54:75:CC:5E:39:77:AB:9A:26:44:65:B7:3C:03

See also http://stackoverflow.com/questions/1180397/tomcat-server-client-self-signed-ssl-certificate

Which works:

http://quakology.blogspot.fr/2009/06/how-to-use-ssl-with-client-certificate.html

openssl pkcs12 -export -in "${H}/apache/crt" -inkey "${H}/apache/key" -out mycert.p12 -name tomcat -CAfile myCA.crt -caname root
Enter Export Password: <changeit>
Verifying - Enter Export Password:  <changeit>

keytool -importkeystore -srckeystore mycert.p12 -srcstoretype PKCS12 -destkeystore keystore.jks
Enter destination keystore password:
Re-enter new password: <changeit>
Enter source keystore password: <changeit>
Entry for alias tomcat successfully imported.
Import command completed:  1 entries successfully imported, 0 entries failed or cancelled

~~~~~~~~~~~
Ubuntu time synchronization as VirtualBox or VMware guest: sudo ntpdate ntp.ubuntu.com

https://help.ubuntu.com/community/UbuntuTime

Command Line ntpdate

Ubuntu comes with ntpdate as standard, and will run it once at boot time to set up your time according to Ubuntu's NTP server. However, a system's clock is likely to drift considerably between reboots if the time between reboots is long. In that case it makes sense to correct the time occasionally. The easiest way to do this is to get cron to run it every day. With your favorite editor, create (needs sudo) a file /etc/cron.daily/ntpdate containing:

 #!/bin/sh
 ntpdate ntp.ubuntu.com

Make sure that you make this new file executable:

sudo chmod 755 /etc/cron.daily/ntpdate

Command Line ntpd

ntpdate is a bit of a blunt instrument as it can only adjust the time once a day in one big correction. The ntp daemon ntpd is far more subtle as it calculates the drift of your system clock and continuously adjusts it in small increments. Using ntpd there are no large corrections that could lead to inconsistent logs for instance. The cost is a little processing power and memory, but for a modern system this is negligible.

To setup ntpd in versions of Ubuntu 7.04 and higher

sudo apt-get install ntp

Is NTP running?

NTP most commonly 'fails' if it cannot resolve the servers in its configuration file at startup (this can happen if DNS isn't available during boot). Also, if NTP is unable to keep the local clock reasonably accurate it gives up and terminates (see below).

Try sudo /etc/init.d/ntp status to check if NTP is running, and sudo /etc/init.d/ntp restart to restart it if necessary.

I have various systems on unreliable networks so I use a simple script to bounce NTP if needed:

$ cat /etc/cron.hourly/BOUNCE-NTP
#!/bin/sh

/usr/bin/ntpq -np | /bin/grep '^\*' > /dev/null || ( /usr/bin/ntpq -np ; /etc/init.d/ntp restart )
~~~~~~~~~~~

gitlab

http://vonc-virtualbox:9880/
user: admin@local.host
pass: 5iveL!fe

~~~~~~~~~~~~
Creative use of read to simulate a pause in bash (bash pause or bash sleep like in DOS)
http://stackoverflow.com/a/92813/6309

If you are using bash, you can also specify a timeout with -t, which causes read to return a failure when a key isn't pressed. So for example:

read -t5 -n1 -r -p "Press any key in the next five seconds..." key

~~~~~~~~~~~~~~~~
Remove sensible name:
anhostname /home/auser/ce8 #git filter-branch -f --tree-filter "find . -type f -name "check_ldap_rootca.sh" -exec sed -i -e 's/ldapservername:port/@LDAP_HOSTNAME@:@LDAP_PORT@/g' {} \;" 7117962..HEAD
~~~~~~~~~~~~~~~~
How to remove vi or vim line numbers
Sequence of keys: esc followed by: 
 :set nonumber
~~~~~~~~~~~~~~~~
Undefined symbol:
Undefined reference: search with error redirection:  /usr/lib #nm -Ap *.so 2>/dev/null | grep libintl_textdomain
vonc@voncm:/$ find . -name "*.*" 2>/dev/null| grep ".*s\?o$"|xargs nm -Ap 2>/dev/null|grep pipe2
vonc@voncm:/$ find . -name "*.*" 2>/dev/null| grep ".*s\?o$"|xargs nm -Ap 2>/dev/null|grep pipe2 | grep -v " U "
vonc@voncm:/$ find / -name "*.*" 2>/dev/null| grep ".*so*$"|xargs nm -Ap 2>/dev/null|grep pipe2 | grep -v " U "

~~~~~~~~~~~~~~~~
List all keys from a JKS keystore used by tomcat:
ahostname /home/git/apache #keytool -keystore /path/to/jks/keystore -storepass ajksPassword -list              
Keystore type: JKS
Keystore provider: SUN

Your keystore contains 3 entries

theAlias, 12-Mar-2012, PrivateKeyEntry,
Certificate fingerprint (MD5): 9E:74:1B:8C:F1:84:5E:D4:16:88:BD:02:7F:71:A7:B1
root_ca, 12-Mar-2012, trustedCertEntry,
Certificate fingerprint (MD5): 8E:24:21:C8:50:17:C0:78:DB:45:88:B9:68:CE:EF:58
org_cert, 12-Mar-2012, trustedCertEntry,

~~~~~~~~~~~~~~~~~~~~~~~~
Exporting CAs from JKS

keytool -keystore /path/to/jks/keystore -export -alias root_ca -rfc -file /home/root_ca.cacert -storepass ajksPassword
org_cert
keytool -keystore /path/to/jks/keystore -export -alias org_cert -rfc -file /home/org_cert.cacert -storepass ajksPassword
Certificate stored in file </home/org_cert.cacert>

ahostname /home/git/apache #keytool -keystore /path/to/jks/keystore -export -alias theAlias -rfc -file /home/theAlias.key -storepass ajksPassword
Certificate stored in file </home/theAlias.key>

~~~~~~~~~~~~~~~~~~~~~~~~~~
Exporting private key from JSK

Do not try to export everything

ahostname /home/git/apache #keytool -importkeystore -srckeystore /path/to/jks/keystore -srcstoretype jks -srcstorepass ajksPassword -destkeystore intermediate.p12 -deststoretype pkcs12 -deststorepass azerty
Enter destination keystore password:
Keystore password is too short - must be at least 6 characters
Enter destination keystore password:
Re-enter new password:
Enter source keystore password:
Entry for alias theAlias successfully imported.
Problem importing entry for alias root_ca: java.security.KeyStoreException: TrustedCertEntry not supported.
Entry for alias root_ca not imported.
Do you want to quit the import process? [no]:
Problem importing entry for alias org_cert: java.security.KeyStoreException: TrustedCertEntry not supported.
Entry for alias org_cert not imported.
Do you want to quit the import process? [no]:
Import command completed:  1 entries successfully imported, 2 entries failed or cancelled
ahostname /home/git/apache #

Normal:  pkcs12 format doesn't support *trusted* certificate.  

Export just the right entry:

ahostname /home #keytool -importkeystore -srckeystore /path/to/jks/keystore -srcstoretype jks -srcstorepass ajksPassword -destkeystore intermediate2.p12 -deststoretype pkcs12 -deststorepass ajksPassword -alias theAlias
Entry for alias theAlias successfully imported.

ahostname /home #openssl pkcs12 -in intermediate3.p12 -out extracted3.pem -nodes -passin pass:ajksPassword
MAC verified OK

NOTE: USE THE SAME PASSWORD FOR BOTH KEYSTORES (JKS and PKCS12):

openssl pkcs12 -in intermediate3.p12 -out extracted3.pem -nodes -passin pass:aDifferentPassword
MAC verified OK
Error outputting keys and certificates
46956866375680:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:evp_enc.c:467:
46956866375680:error:23077074:PKCS12 routines:PKCS12_pbe_crypt:pkcs12 cipherfinal error:p12_decr.c:97:
46956866375680:error:2306A075:PKCS12 routines:PKCS12_item_decrypt_d2i:pkcs12 pbe crypt error:p12_decr.c:123:

~~~~~~~~~~~~~~~~~~~~~~~~~~
For more on the importance of using the same password for both keystores (the JKS one and the PKCS12 one), see:

http://www.herongyang.com/PKI/Intermediate-CA-OpenSSL-pkcs12-Decrypt-Error.html
http://www.nicobo.net/articles/paper-backup-your-private-key

Exporting keypair and certificate

Since JDK 6, keytool provides the -importkeystore command to import / export full data between keystores. Before that, only public parts could be exported. Unfortunately it is still not able to export private data to plain text : you will need to use another tool to achieve this : openssl.

keytool -importkeystore -srcstoretype jks -srcalias foo -deststoretype pkcs12 -srckeystore mykeys.jks -destkeystore foo.p12
 
openssl pkcs12 -in foo.p12 -out foo.pem -nodes
The first command exports all key/certificate data to a binary PKCS12 file. 

=====> ****Make sure to give this file the same password as the exported key (see the note about passwords).****

The second command converts the binary PKCS12 to readable text (also called PEM, or ASCII-armored).
By default the private key is still printed encrypted with a symmetric algorithm, so even if you get this key data, you will need the password to unlock it. The option -nodes bypasses this by allowing the key to be printed unencrypted.

You end up with two Base64-encoded elements in the file "foo.pem" : the private key and the certificate :

Restoring the certificate

When the big day has come and you want to restore your digital certificate from a piece of paper, simply type the key data back into a text file (let's call it "foo-restored.pem") then run the following commands :


openssl pkcs12 -export -in foo-restored.pem -out foo-restored.p12
 
keytool -importkeystore -srckeystore foo-restored.p12 -srcstoretype pkcs12 -destkeystore restored.jks -deststoretype jks -srcalias 1 -destalias foorestored
You could try an OCR software to scan the text from a photo or image. I have not been successful with this yet.

This time, the first line converts back the PEM data to binary PKCS12.
Don't miss the -export option, that was not used for the opposite transformation.

The second line imports back the key and certificate into your JKS keystore. If it already exists, it will be updated.
We did not specify an alias (-name) for the key on the openssl command so we use -srcalias 1 to target it. You can choose whatever alias you want for the restored key in your keystore (here "foorestored").

Remember : the new password the openssl command asks for will be the password for the key. The new password the keytool command asks for will be the password for the keystore.

Your keystore "restored.jks" now contains an exact copy of your lost key : signing with it will produce identical results as signing with the original key.

Note - If you want to compare two signed jar, compare their content, not the jar themselves : all files must be binary equal (except the name of the key files if you changed it).


See also http://www.herongyang.com/PKI/Intermediate-CA-OpenSSL-pkcs12-Decrypt-Error.html

This section provides a tutorial example on why OpenSSL 'pkcs12' failed with 'bad decrypt:./crypto/evp/evp_enc.c:461' error. The root cause is the key password different than file password.
When I was trying to export my private key from the KeyStore file, I encountered an file password issue, which is worth mentioning here.
See the OpenSSL error message displayed below:
C:\herong>\local\jdk\bin\keytool -importkeystore 
   -srckeystore herong.jks -srcstoretype jks -srcstorepass HerongJKS
   -srcalias herongyang.com
   -destkeystore test.p12 -deststoretype pkcs12 -deststorepass TestP12
   -destalias 1

C:\herong>\local\gnuwin32\bin\openssl pkcs12 -in Test.p12 
   -passin pass:TestP12 -nocerts -out test_key.pem 
   -des -passout pass:TestKey

MAC verified OK
Error outputting keys and certificates
3812:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:
   bad decrypt:./crypto/evp/evp_enc.c:461:
3812:error:23077074:PKCS12 routines:PKCS12_pbe_crypt:pkcs12 
   cipherfinal error:./crypto/pkcs12/p12_decr.c:97:
3812:error:2306A075:PKCS12 routines:PKCS12_item_decrypt_d2i:
   pkcs12 pbe crypt error:./crypto/pkcs12/p12_decr.c:123:
So what's wrong with the PKCS12 file, Test.p12? Why OpenSSL can not decrypt my private key from Test.p12? Here is what I think:
In the original KeyStore file, Herong.jks, there are 2 separate passwords used: a. Key password, "HerongJKS", used to encrypt my private key; b. File password, "HerongJKS", used to encrypt the entire KeyStore file.
In my "keytool -importkeystore" command, I did not specify the source key password. But "keytool" is smart enough to use the source file password to decrypt the private key.
Also in my "keytool -importkeystore" command, I did not specify the destination key password. But "keytool" is stupid enough to reuse the source key password as the destination key password. "keytool" generate the destination PKCS12 file, Test.p12, with 2 different passwords: a. Key password, "HerongJKS", used to encrypt my private key; b. File password, "TestP12", used to encrypt the entire PKCS12 file.
When executed the OpenSSL "pkcs12" command, I only specified the PKCS12 file password, "TestP12". There is no option for me to specify the key password, which is different than the file password. This is causing "pkcs12" command to fail.
Obviously, to avoid this problem, you have to set the key password and the file password with the same value with "keytool". See tutorials in previous sections on how to do this.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~

http://www.cprogramming.com/tutorial/shared-libraries-linux-gcc.html

Shared libraries with GCC on Linux

By anduril462
Libraries are an indispensable tool for any programmer. They are pre-existing code that is compiled and ready for you to use. They often provide generic functionality, like linked lists or binary trees that can hold any data, or specific functionality like an interface to a database server such as MySQL.

Most larger software projects will contain several components, some of which you may find use for later on in some other project, or that you just want to separate out for organizational purposes. When you have a reusable or logically distinct set of functions, it is helpful to build a library from it so that you don’t have to copy the source code into your current project and recompile it all the time–and so you can keep different modules of your program disjoint and change one without affecting others. Once it’s been written and tested, you can safely reuse it over and over again, saving the time and hassle of building it into your project every time.

Building static libraries is fairly simple, and since we rarely get questions on them, I won’t cover them. I’ll stick with shared libraries, which seem to be more confusing for most people.

Before we get started, it might help to get a quick rundown of everything that happens from source code to running program:

C Preprocessor: This stage processes all the preprocessor directives. Basically, any line that starts with a #, such as #define and #include.
Compilation Proper: Once the source file has been preprocessed, the result is then compiled. Since many people refer to the entire build process as compilation, this stage is often referred to as “compilation proper.” This stage turns a .c file into an .o (object) file.
Linking: Here is where all of the object files and any libraries are linked together to make your final program. Note that for static libraries, the actual library is placed in your final program, while for shared libraries, only a reference to the library is placed inside. Now you have a complete program that is ready to run. You launch it from the shell, and the program is handed off to the loader.
Loading: This stage happens when your program starts up. Your program is scanned for references to shared libraries. Any references found are resolved and the libraries are mapped into your program.
Steps 3 and 4 are where the magic (and confusion) happens with shared libraries.

Now, on to our (very simple) example.

foo.h:

1
2
3
4
5
6
#ifndef foo_h__
#define foo_h__
 
extern void foo(void);
 
#endif  // foo_h__
foo.c:

1
2
3
4
5
6
7
#include <stdio.h>
 
 
void foo(void)
{
    puts("Hello, I'm a shared library");
}
main.c:

1
2
3
4
5
6
7
8
9
#include <stdio.h>
#include "foo.h"
 
int main(void)
{
    puts("This is a shared library test...");
    foo();
    return 0;
}
foo.h defines the interface to our library, a single function, foo(). foo.c contains the implementation of that function, and main.c is a driver program that uses our library.

For the purposes of this example, everything will happen in /home/username/foo

Step 1: Compiling with Position Independent Code

We need to compile our library source code into position-independent code (PIC):1

$ gcc -c -Wall -Werror -fpic foo.c
Step 2: Creating a shared library from an object file

Now we need to actually turn this object file into a shared library. We’ll call it libfoo.so:

gcc -shared -o libfoo.so foo.o
Step 3: Linking with a shared library

As you can see, that was actually pretty easy. We have a shared library. Let’s compile our main.c and link it with libfoo. We’ll call our final program “test.” Note that the -lfoo option is not looking for foo.o, but libfoo.so. GCC assumes that all libraries start with ‘lib’ and end with .so or .a (.so is for shared object or shared libraries, and .a is for archive, or statically linked libraries).

$ gcc -Wall -o test main.c -lfoo
/usr/bin/ld: cannot find -lfoo
collect2: ld returned 1 exit status
Telling GCC where to find the shared library

Uh-oh! The linker doesn’t know where to find libfoo. GCC has a list of places it looks by default, but our directory is not in that list.2 We need to tell GCC where to find libfoo.so. We will do that with the -L option. In this example, we will use the current directory, /home/username/foo:

$ gcc -L/home/username/foo -Wall -o test main.c -lfoo
Step 4: Making the library available at runtime

Good, no errors. Now let’s run our program:

$ ./test
./test: error while loading shared libraries: libfoo.so: cannot open shared object file: No such file or directory
Oh no! The loader can’t find the shared library.3 We didn’t install it in a standard location, so we need to give the loader a little help. We have a couple of options: we can use the environment variable LD_LIBRARY_PATH for this, or rpath. Let’s take a look first at LD_LIBRARY_PATH:

Using LD_LIBRARY_PATH

$ echo $LD_LIBRARY_PATH
There’s nothing in there. Let’s fix that by prepending our working directory to the existing LD_LIBRARY_PATH:

$ LD_LIBRARY_PATH=/home/username/foo:$LD_LIBRARY_PATH
$ ./test
./test: error while loading shared libraries: libfoo.so: cannot open shared object file: No such file or directory
What happened? Our directory is in LD_LIBRARY_PATH, but we didn’t export it. In Linux, if you don’t export the changes to an environment variable, they won’t be inherited by the child processes. The loader and our test program didn’t inherit the changes we made. Thankfully, the fix is easy:

$ export LD_LIBRARY_PATH=/home/username/foo:$LD_LIBRARY_PATH
$ ./test
This is a shared library test...
Hello, I'm a shared library
Good, it worked! LD_LIBRARY_PATH is great for quick tests and for systems on which you don’t have admin privileges. As a downside, however, exporting the LD_LIBRARY_PATH variable means it may cause problems with other programs you run that also rely on LD_LIBRARY_PATH if you don’t reset it to its previous state when you’re done.

Using rpath

Now let’s try rpath (first we’ll clear LD_LIBRARY_PATH to ensure it’s rpath that’s finding our library). Rpath, or the run path, is a way of embedding the location of shared libraries in the executable itself, instead of relying on default locations or environment variables. We do this during the linking stage. Notice the lengthy “-Wl,-rpath=/home/username/foo” option. The -Wl portion sends comma-separated options to the linker, so we tell it to send the -rpath option to the linker with our working directory.

$ unset LD_LIBRARY_PATH
$ gcc -L/home/username/foo -Wl,-rpath=/home/username/foo -Wall -o test main.c -lfoo
$ ./test
This is a shared library test...
Hello, I'm a shared library
Excellent, it worked. The rpath method is great because each program gets to list its shared library locations independently, so there are no issues with different programs looking in the wrong paths like there were for LD_LIBRARY_PATH.

rpath vs. LD_LIBRARY_PATH

There are a few downsides to rpath, however. First, it requires that shared libraries be installed in a fixed location so that all users of your program will have access to those libraries in those locations. That means less flexibility in system configuration. Second, if that library refers to a NFS mount or other network drive, you may experience undesirable delays–or worse–on program startup.

Using ldconfig to modify ld.so

What if we want to install our library so everybody on the system can use it? For that, you will need admin privileges. You will need this for two reasons: first, to put the library in a standard location, probably /usr/lib or /usr/local/lib, which normal users don’t have write access to. Second, you will need to modify the ld.so config file and cache. As root, do the following:

$ cp /home/username/foo/libfoo.so /usr/lib
$ chmod 0755 /usr/lib/libfoo.so
Now the file is in a standard location, with correct permissions, readable by everybody. We need to tell the loader it’s available for use, so let’s update the cache:

$ ldconfig
That should create a link to our shared library and update the cache so it’s available for immediate use. Let’s double check:

$ ldconfig -p | grep foo
libfoo.so (libc6) => /usr/lib/libfoo.so
Now our library is installed. Before we test it, we have to clean up a few things:

Clear our LD_LIBRARY_PATH once more, just in case:

$ unset LD_LIBRARY_PATH
Re-link our executable. Notice we don’t need the -L option since our library is stored in a default location and we aren’t using the rpath option:

$ gcc -Wall -o test main.c -lfoo
Let’s make sure we’re using the /usr/lib instance of our library using ldd:

$ ldd test | grep foo
libfoo.so => /usr/lib/libfoo.so (0x00a42000)
Good, now let’s run it:

$ ./test
This is a shared library test...
Hello, I'm a shared library
That about wraps it up. We’ve covered how to build a shared library, how to link with it, and how to resolve the most common loader issues with shared libraries–as well as the positives and negatives of different approaches.

What is position independent code? PIC is code that works no matter where in memory it is placed. Because several different programs can all use one instance of your shared library, the library cannot store things at fixed addresses, since the location of that library in memory will vary from program to program.

↩
GCC first searches for libraries in /usr/local/lib, then in /usr/lib. Following that, it searches for libraries in the directories specified by the -L parameter, in the order specified on the command line.

↩
The default GNU loader, ld.so, looks for libraries in the following order:

It looks in the DT_RPATH section of the executable, unless there is a DT_RUNPATH section.
It looks in LD_LIBRARY_PATH. This is skipped if the executable is setuid/setgid for security reasons.
It looks in the DT_RUNPATH section of the executable unless the setuid/setgid bits are set (for security reasons).
It looks in the cache file /etc/ld/so/cache (disabled with the ‘-z nodeflib’ linker option).
It looks in the default directories /lib then /usr/lib (disabled with the ‘-z nodeflib’ linker option).

~~~~~~~~~~~~~~~~~~~~
restore deleted file in git: http://stackoverflow.com/a/11301004/6309 git co $(git rev-list -n 1 HEAD -- <file_path>)~1 -- $(git diff --name-status $(git rev-list -n 1 HEAD -- <file_path>)~1 | grep '^D' | cut -f 2)
See http://stackoverflow.com/a/14922749/6309
~~~~~~~~~~~~~~~~~~~~
Change author/committer name for the last 5 commits:
vonc@voncu:~/gitpoc/ce1$ git filter-branch --env-filter "GIT_AUTHOR_NAME='VonC'; GIT_AUTHOR_EMAIL='vonc@laposte.net'; GIT_COMMITTER_NAME='VonC'; GIT_COMMITTER_EMAIL='vonc@laposte.net';" -- -5
~~~~~~~~~~~~~~~~~~~~
